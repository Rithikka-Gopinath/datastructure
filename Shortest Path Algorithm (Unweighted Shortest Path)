#include <stdio.h>
#include <limits.h>
#include <stdbool.h>

#define MAX 100
int adj[MAX][MAX], dist[MAX], queue[MAX], front = 0, rear = 0;

void bfs(int start, int n) {
    for (int i = 0; i < n; i++) {
        dist[i] = INT_MAX;
    }
    dist[start] = 0;
    queue[rear++] = start;

    while (front != rear) {
        int u = queue[front++];
        for (int v = 0; v < n; v++) {
            if (adj[u][v] && dist[v] == INT_MAX) {
                dist[v] = dist[u] + 1;
                queue[rear++] = v;
            }
        }
    }
}

int main() {
    int n, edges, u, v, start;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    for (int i = 0; i < edges; i++) {
        printf("Enter edge (u v): ");
        scanf("%d %d", &u, &v);
        adj[u][v] = adj[v][u] = 1;
    }

    printf("Enter the starting vertex: ");
    scanf("%d", &start);

    bfs(start, n);

    printf("Shortest distances from vertex %d:\n", start);
    for (int i = 0; i < n; i++) {
        printf("To %d: %d\n", i, dist[i]);
    }

    return 0;
}
